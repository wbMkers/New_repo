CREATE OR REPLACE PROCEDURE WFBULKADHOCROUTE
(
	IN_PROCESSDEFID			INTEGER, -- processdefid for which bulk adhoc needs to be performed.
	IN_ACTIVITYID			INTEGER, --  source activityid
	IN_TARGETACTIVITYID		INTEGER, --target activityid
	IN_NOOFDAYS				INTEGER -- entrydatetime < (sysdate - IN_NOOFDAYS) WIs will be moved
)
AS
	V_TARGETACTIVITYNAME	NVARCHAR2(255);
	V_TARGETACTIVITYTYPE	NVARCHAR2(10);
	V_TARGETACTVITYID		INTEGER;
	V_WORKITEMSTATE			INTEGER;
	V_STATENAME				NVARCHAR2(20);
	V_PROCESSINSTANCESTATE	INTEGER;
	V_ASSIGNMENTTYPE		NVARCHAR2(2);
	V_QUERYSTR        		NVARCHAR2(2000);
	V_QUERYSTR1        		NVARCHAR2(2000);
	V_PREVACTIVITY			NVARCHAR2(255);
	TYPE DYNAMICCURSOR  	IS REF CURSOR;
    V_ADHOCCURSOR           DYNAMICCURSOR;
	V_PROCESSINSTANCEID		NVARCHAR2(255);
	V_WORKITEMID			INTEGER;
	V_LOOP					INTEGER;
	V_COUNT					INTEGER;
	v_quoteChar 			CHAR(1);
	v_MainCode				INTEGER;
	
BEGIN
	V_LOOP := 1;
	V_COUNT := 0;
	v_quoteChar := CHR(39);
	-- GET THE TARGET ACTIVITY NAME AND ACTIVITYTYPE
	BEGIN
		SELECT ACTIVITYNAME, ACTIVITYTYPE INTO V_TARGETACTIVITYNAME, V_TARGETACTIVITYTYPE FROM ACTIVITYTABLE WHERE PROCESSDEFID = 
		IN_PROCESSDEFID AND ACTIVITYID = IN_TARGETACTIVITYID;
		V_TARGETACTIVITYNAME:=REPLACE(V_TARGETACTIVITYNAME,v_quoteChar,v_quoteChar||v_quoteChar);
	EXCEPTION 
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('ERROR IN FINDING TARGET ACTIVITYNAME.');
			RETURN;
	END;
	DBMS_OUTPUT.PUT_LINE('TARGET ACTIVITYNAME: '|| V_TARGETACTIVITYNAME);	
	DBMS_OUTPUT.PUT_LINE('TARGET ACTIVITYTYPE: '|| V_TARGETACTIVITYTYPE);	
	
	-- VALIDATE TARGET ACTIVITY TYPE
	IF(V_TARGETACTIVITYTYPE <> 10 AND V_TARGETACTIVITYTYPE <> 2 AND V_TARGETACTIVITYTYPE <> 3)THEN
	BEGIN
		DBMS_OUTPUT.PUT_LINE('TARGET ACTIVITY TYPE NOT SUPPORTED.'); 
		RETURN;
	END;
	ELSIF(V_TARGETACTIVITYTYPE = 10) THEN
	BEGIN
		V_WORKITEMSTATE := 1;
		V_STATENAME := 'NOTSTARTED';
		V_PROCESSINSTANCESTATE := 2;
	END;
	ELSIF(V_TARGETACTIVITYTYPE = 3) THEN
	BEGIN
		V_WORKITEMSTATE := 5;
		V_STATENAME := 'SUSPENDED';
		V_PROCESSINSTANCESTATE := 5;
	END;
	ELSIF(V_TARGETACTIVITYTYPE = 2) THEN
	BEGIN
		V_WORKITEMSTATE := 6;
		V_STATENAME := 'COMPLETED';
		V_PROCESSINSTANCESTATE := 2;
	END;
	END IF;
	
	-- GET THE TABLE NAME WHERE WORKITEM IS PRESENT
	
	BEGIN
		V_QUERYSTR1 := 'SELECT PROCESSINSTANCEID, WORKITEMID, ACTIVITYNAME, ASSIGNMENTTYPE FROM WFINSTRUMENTTABLE WHERE PROCESSDEFID = '|| TO_CHAR(IN_PROCESSDEFID) || ' AND ACTIVITYID = '|| TO_CHAR(IN_ACTIVITYID) ||' AND ENTRYDATETIME < (SYSDATE - '|| TO_CHAR(IN_NOOFDAYS) ||') AND ASSIGNMENTTYPE != ''E'' AND ROWNUM <= 101';
		DBMS_OUTPUT.PUT_LINE('V_QUERYSTR0: '||V_QUERYSTR1);
		WHILE V_LOOP = 1 LOOP
		BEGIN
		DBMS_OUTPUT.PUT_LINE('BATCH STARTING: ');
		V_COUNT := 0;
		DBMS_OUTPUT.PUT_LINE('V_QUERYSTR3: '||V_QUERYSTR1);
			OPEN V_ADHOCCURSOR FOR TO_CHAR(V_QUERYSTR1);
			LOOP
				V_LOOP := 0;
				FETCH V_ADHOCCURSOR INTO V_PROCESSINSTANCEID, V_WORKITEMID, V_PREVACTIVITY, V_ASSIGNMENTTYPE;
				V_PREVACTIVITY:=REPLACE(V_PREVACTIVITY,v_quoteChar,v_quoteChar||v_quoteChar);
				V_PROCESSINSTANCEID:=REPLACE(V_PROCESSINSTANCEID,v_quoteChar,v_quoteChar||v_quoteChar);
				EXIT WHEN V_ADHOCCURSOR%NOTFOUND;
				DBMS_OUTPUT.PUT_LINE('V_PROCESSINSTANCEID: '||V_PROCESSINSTANCEID);
				DBMS_OUTPUT.PUT_LINE('V_WORKITEMID: '||V_WORKITEMID);
				DBMS_OUTPUT.PUT_LINE('V_PREVACTIVITY: '||V_PREVACTIVITY);
				DBMS_OUTPUT.PUT_LINE('V_ASSIGNMENTTYPE: '||V_ASSIGNMENTTYPE);				
				IF V_COUNT = 100 THEN
				BEGIN
					V_LOOP := 1;
					DBMS_OUTPUT.PUT_LINE('exit');
					EXIT;
				END;
				END IF;
				
				
							
				SAVEPOINT ADHOCROUTE;
					BEGIN
						V_QUERYSTR := 'UPDATE WFINSTRUMENTTABLE SET ASSIGNMENTTYPE = ''D'',QUEUENAME = '''', QUEUETYPE = '''', Q_QUEUEID = 0, Q_STREAMID = 0, ROUTINGSTATUS = ''Y'', PREVIOUSSTAGE = '''|| TO_CHAR(V_PREVACTIVITY) ||''', WORKITEMSTATE = '|| TO_CHAR(V_WORKITEMSTATE) ||', STATENAME = '''|| V_STATENAME ||''', PROCESSINSTANCESTATE  = '|| TO_CHAR(V_PROCESSINSTANCESTATE) ||', ACTIVITYNAME = '''|| V_TARGETACTIVITYNAME ||''', ACTIVITYID = '|| TO_CHAR(IN_TARGETACTIVITYID) ||', ENTRYDATETIME = SYSDATE  WHERE  PROCESSINSTANCEID = N''' || V_PROCESSINSTANCEID ||'''';
						DBMS_OUTPUT.PUT_LINE('V_QUERYSTR1: '||V_QUERYSTR);
						EXECUTE IMMEDIATE TO_CHAR(V_QUERYSTR);	
					 
						WFGenerateLog(45, 0, IN_PROCESSDEFID, IN_TARGETACTIVITYID, 0, 'SYSTEM_BULKADHOC', V_TARGETACTIVITYNAME, 0, V_PROCESSINSTANCEID, 0, NULL, V_WORKITEMID, 0, 0, v_MainCode, 'N', 0, 0, 0, NULL,NULL,NULL);
						
						COMMIT;
					EXCEPTION 
						WHEN OTHERS THEN
							CLOSE V_ADHOCCURSOR;
							DBMS_OUTPUT.PUT_LINE('ERROR');
							ROLLBACK TO ADHOCROUTE;
					END;-- ADHOC SAVEPOINT
				V_COUNT := V_COUNT + 1;								
			END LOOP;
		END;
		END LOOP;
		CLOSE V_ADHOCCURSOR;
	END; -- ACTIVITYID = 0 ELSE	 
END;-- 1ST BLOCK
