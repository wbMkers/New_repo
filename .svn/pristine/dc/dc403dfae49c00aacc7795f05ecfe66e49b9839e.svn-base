

CREATE OR ALTER PROCEDURE PWM_DELETE_COMPLX_AND_SQL (

	--@IN_PROCESSINSTANCEID NVARCHAR(70)
	--,
	@IN_PROCESSDEFID INT
	,@IN_NOOFDAYS INT
	
	)
AS
DECLARE @V_QUERYSTR NVARCHAR(MAX)
DECLARE @V_QUERYSTR_COUNT NVARCHAR(MAX)
DECLARE @EXISTSFLAG INTEGER = 0
DECLARE @V_QUERYSTR_PROCESSDEFID NVARCHAR(MAX)
DECLARE @V_QUERYSTR_PROCESSINSTANCEID NVARCHAR(MAX)
DECLARE @V_QUERYSTR_GENERAL_UNCONDITIONAL NVARCHAR(MAX)
DECLARE @CUR_COMPLEX_TABLE CURSOR 
DECLARE @V_PROCESSDEFID NVARCHAR(200)
DECLARE @V_PARENTOBJECT NVARCHAR(200)
DECLARE @V_FOREIGNKEY NVARCHAR(200)
DECLARE @V_CHILDOBJECT NVARCHAR(200)
DECLARE @V_REFKEY NVARCHAR(200)
DECLARE @V_PARENTOBJECT_1 NVARCHAR(200)
DECLARE @V_FOREIGNKEY_1 NVARCHAR(200)
DECLARE @V_CHILDOBJECT_1 NVARCHAR(200)
DECLARE @V_REFKEY_1 NVARCHAR(200)
DECLARE @V_PARAMDEFINITION1  NVARCHAR(MAX)
DECLARE @V_PARAMDEFINITION2  NVARCHAR(MAX)
DECLARE @V_EXT_TABLE NVARCHAR(200)
DECLARE @V_QUERY_STR_EXT_TABLE NVARCHAR(MAX)
DECLARE @V_TOTAL_COUNT INT
DECLARE @V_QUERYLOGSUBJECT NVARCHAR(MAX)

BEGIN
	IF (@IN_PROCESSDEFID = NULL OR @IN_PROCESSDEFID < 0 )
	BEGIN
		RAISERROR ( 'Invalid ProcessDefId or Source Cabinet or NoOfDays',16,1)
		RETURN
	END
	
	SET @V_PROCESSDEFID = @IN_PROCESSDEFID
	
	SET @V_QUERY_STR_EXT_TABLE = 'SELECT @V_EXT_TABLE = TABLENAME FROM EXTDBCONFTABLE WHERE PROCESSDEFID=47 AND EXTOBJID=1'

	EXECUTE sp_executesql @V_QUERY_STR_EXT_TABLE ,N'@V_EXT_TABLE NVARCHAR output',@V_EXT_TABLE OUTPUT
	
	IF (@V_EXT_TABLE IS NULL OR @V_EXT_TABLE = ' ')
	BEGIN
		SET @V_EXT_TABLE = 'NULL'
	END
	
	SET @V_QUERYSTR_COUNT = 'SELECT @V_TOTAL_COUNT = COUNT(1) FROM WFVARRELATIONTABLE WHERE PROCESSDEFID = ' + CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ' AND parentobject=''WFINSTRUMENTTABLE'' or parentobject = ''' + @V_EXT_TABLE + ''' and childobject not in  ( select parentobject from wfvarrelationtable where Processdefid = ' + CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ' ) AND RELATIONID IN ( SELECT RELATIONID FROM WFVARRELATIONTABLE WHERE PROCESSDEFID=1 AND ORDERID > 1)' 
	PRINT('TEST'+@V_QUERYSTR_COUNT)
	EXECUTE sp_executesql @V_QUERYSTR_COUNT ,N'@V_TOTAL_COUNT NVARCHAR output',@V_TOTAL_COUNT OUTPUT
	
	IF (@V_TOTAL_COUNT > 1)
	BEGIN
		BEGIN
			
			SET @V_QUERYSTR_PROCESSDEFID = 'SELECT @V_PARENTOBJECT = PARENTOBJECT,@V_FOREIGNKEY = FOREIGNKEY,@V_CHILDOBJECT = CHILDOBJECT, @V_REFKEY = REFKEY FROM WFVARRELATIONTABLE WHERE PROCESSDEFID= ' + CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ' AND parentobject=''WFINSTRUMENTTABLE'' or parentobject = ''' + @V_EXT_TABLE + ''' and childobject not in ( select parentobject from wfvarrelationtable where Processdefid = ' + CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ') AND RELATIONID IN ( SELECT RELATIONID FROM WFVARRELATIONTABLE WHERE PROCESSDEFID='+ CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ' AND ORDERID > 1) AND OrderId = 1'
			
			SET @V_PARAMDEFINITION1 = N'@V_PARENTOBJECT NVARCHAR(200) OUTPUT, @V_FOREIGNKEY NVARCHAR(200) OUTPUT, @V_CHILDOBJECT NVARCHAR(200) OUTPUT, @V_REFKEY NVARCHAR(200) OUTPUT'
		
			BEGIN TRY
				EXECUTE SP_EXECUTESQL @V_QUERYSTR_PROCESSDEFID, @V_PARAMDEFINITION1, @V_PARENTOBJECT = @V_PARENTOBJECT OUTPUT, @V_FOREIGNKEY = @V_FOREIGNKEY OUTPUT,@V_CHILDOBJECT = @V_CHILDOBJECT OUTPUT, @V_REFKEY = @V_REFKEY OUTPUT
			END TRY
			BEGIN CATCH
					SET @V_QUERYLOGSUBJECT = 'EXCEPTION OCCURS WHILE SELECTING  COMPLEX TYPE FOR FIRST AND CONDITION FROM WFVARRELATIONTABLE ON ' + @IN_PROCESSDEFID 
					EXECUTE PMWLOGINSERT  'ERROR',@V_QUERYLOGSUBJECT,@V_QUERYSTR_PROCESSDEFID
			END CATCH
						
			--PRINT (@V_PARENTOBJECT + '-F-' + @V_FOREIGNKEY + '-C-' + @V_CHILDOBJECT + '-REF-' + @V_REFKEY )
			
			SET @V_QUERYSTR_PROCESSDEFID = 'SELECT @V_PARENTOBJECT_1 = PARENTOBJECT,@V_FOREIGNKEY_1=FOREIGNKEY, @V_CHILDOBJECT_1 = CHILDOBJECT, @V_REFKEY_1=REFKEY FROM WFVARRELATIONTABLE WHERE PROCESSDEFID= ' + CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ' AND parentobject=''WFINSTRUMENTTABLE'' or parentobject = ''' + @V_EXT_TABLE + ''' and childobject not in ( select parentobject from wfvarrelationtable where Processdefid = ' + CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ') AND RELATIONID IN ( SELECT RELATIONID FROM WFVARRELATIONTABLE WHERE PROCESSDEFID='+ CONVERT(NVARCHAR,@IN_PROCESSDEFID) + ' AND ORDERID > 1) AND OrderId = 2'
			
			SET @V_PARAMDEFINITION2 = N'@V_PARENTOBJECT_1 NVARCHAR(200) OUTPUT, @V_FOREIGNKEY_1 NVARCHAR(200) OUTPUT, @V_CHILDOBJECT_1 NVARCHAR(200) OUTPUT, @V_REFKEY_1 NVARCHAR(200) OUTPUT'
		
			BEGIN TRY
				EXECUTE SP_EXECUTESQL @V_QUERYSTR_PROCESSDEFID, @V_PARAMDEFINITION2, @V_PARENTOBJECT_1 = @V_PARENTOBJECT_1 OUTPUT, @V_FOREIGNKEY_1 = @V_FOREIGNKEY_1 OUTPUT,@V_CHILDOBJECT_1 = @V_CHILDOBJECT_1 OUTPUT, @V_REFKEY_1 = @V_REFKEY_1 OUTPUT
			END TRY
			BEGIN CATCH
					SET @V_QUERYLOGSUBJECT = 'EXCEPTION OCCURS WHILE SELECTING  COMPLEX TYPE FOR FIRST SECOND CONDITION FROM WFVARRELATIONTABLE ON ' + @IN_PROCESSDEFID 
					EXECUTE PMWLOGINSERT  'ERROR',@V_QUERYLOGSUBJECT,@V_QUERYSTR_PROCESSDEFID
			END CATCH
			--PRINT (@V_PARENTOBJECT_1 + '-F-' + @V_FOREIGNKEY_1 + '-C-' + @V_CHILDOBJECT_1 + '-REF-' + @V_REFKEY_1 )
			
			BEGIN TRY
				PRINT ('CALLING THE PROCEDURE OF AND CONDITION IN COMPLEX')
				EXEC PMW_COMPLX_DELETE_AND_NEW @IN_PROCESSDEFID,@V_PARENTOBJECT,@V_FOREIGNKEY,@V_CHILDOBJECT,@V_REFKEY,@V_PARENTOBJECT_1,@V_FOREIGNKEY_1,@V_CHILDOBJECT_1,@V_REFKEY_1,@IN_NOOFDAYS
			END TRY
			BEGIN CATCH
				SET @V_QUERYLOGSUBJECT = 'EXCUTION OF PROC FROM COPMLEX TABLE WITH AND CONDITION FAILED FOR PROCESSDEFID ' + @V_PROCESSDEFID + ' AND GIVES ERROR AT LINE : ' + CONVERT(NVARCHAR(10), ERROR_NUMBER()) + ' , ERROR MESSAGE : ' + ERROR_MESSAGE()
				EXECUTE PMWLOGINSERT  'ERROR',@V_QUERYLOGSUBJECT,'PROCEDURE CALL PMW_COMPLX_DELETE_AND_NEW '
			END CATCH
			
		END
	
		
	END
	
END
	
	