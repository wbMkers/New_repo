/*
------------------------------------------------------------------------------------------------------
			NEWGEN SOFTWARE TECHNOLOGIES LIMITED
	Group				: Genesis
	Product				: OmniFlow 10.x
	Module				: Transaction Server
	File Name			: WFGetNextWorkItemForUtil.sql
	Author				: Shahzad Malik
	Date written		: Mar 18th, 2019
	Description			: This procedure will fetch next item present in the specified queue
------------------------------------------------------------------------------------------------------
				CHANGE HISTORY
------------------------------------------------------------------------------------------------------
Date		Change By			Change Description (Bug No. (If Any))
------------------------------------------------------------------------------------------------------
18/03/2019	Shahzad Malik		Bug 83557 - Write SP for fetching next item for utilities
23/07/2019	Ravi Ranjan Kumar   PRDP BUG Merging Bug 85705 - Write SP for fetching next item for utilities
11/10/2019  Ravi Ranjan Kumar   Bug 85910 - Optimization in WFGetNextWorkItemForUtil procedure(PRDP BUG Merging Bug)
19/11/2018	Ravi Ranjan Kumar	Bug 88386 - Rest Service and Soap Service Utility ,both utility are register ,then Soap service utility picking the workitem of rest service or vice-versa
23/07/2020  Shubham Singla      Internal Bug:Code modified for picking up only that workitems that are being locked for more than 3 seconds.
------------------------------------------------------------------------------------------------------
*/
IF EXISTS(SELECT * FROM SysObjects WHERE xType = 'P' AND name = 'WFGetNextWorkItemForUtil')
BEGIN
	DROP PROCEDURE WFGetNextWorkItemForUtil
	Print 'Procedure WFGetNextWorkItemForUtil already exists, hence older one dropped ..... '
END

~

CREATE PROCEDURE WFGetNextWorkItemForUtil (
	@SESSIONID INT,
	@Q_QUEUEID INT,
	@CSNAME NVARCHAR(100)
)
AS 
SET NOCOUNT ON

DECLARE @OUT_MAINCODE INT
DECLARE @OUT_CSSESSIONID INT
DECLARE @OUT_USERID INT
DECLARE @OUT_PROCESSINSTANCEID NVARCHAR(256)
DECLARE @OUT_WORKITEMID INT
DECLARE @OUT_PROCESSDEFID INT
DECLARE @OUT_ACTIVITYID INT
DECLARE @OUT_PROCESSNAME NVARCHAR(256)
DECLARE @V_ROWCOUNT INT
DECLARE @V_DBSTATUS INT
DECLARE @V_USERNAME NVARCHAR(256)
DECLARE @V_QUERY NVARCHAR(4000)
DECLARE @V_SESSIONID INT
DECLARE @V_ACTIVITYNAME NVARCHAR(256)
DECLARE @OUT_URN NVARCHAR(256)
DECLARE @V_PARAMDEFINITION NVARCHAR(2000)
DECLARE @ServiceType NVARCHAR(256)
DECLARE @ActivityType INT
DECLARE @isRestSOAP INT
BEGIN
	SET @OUT_MAINCODE = 0
	SET @V_ROWCOUNT = 0
	SET @isRestSOAP=0
	
	BEGIN
		SET @V_QUERY = N'SELECT @OUT_CSSESSIONID = ISNULL(SESSIONID,0) FROM PSREGISTERATIONTABLE WITH(NOLOCK) WHERE TYPE = ''C'' AND PSNAME = @CSNAME'
		SET @V_PARAMDEFINITION = N'@CSNAME NVARCHAR(100),@OUT_CSSESSIONID INT OUTPUT'
		EXECUTE SP_EXECUTESQL @V_QUERY, @V_PARAMDEFINITION,  @CSNAME = @CSNAME, @OUT_CSSESSIONID = @OUT_CSSESSIONID OUTPUT
		SELECT @V_ROWCOUNT = @@ROWCOUNT
		SELECT @V_DBSTATUS = @@ERROR
	END
	
	IF(@V_ROWCOUNT <= 0 OR @V_DBSTATUS <> 0)
	BEGIN
		SELECT @OUT_CSSESSIONID = 0
	END
	
	BEGIN
		SET @V_QUERY = N'SELECT @OUT_USERID = PSReg.PSID,@V_USERNAME = PSReg.PSNAME FROM PSREGISTERATIONTABLE PSReg WITH(NOLOCK), WFPSConnection PSCon  WITH(NOLOCK) WHERE PSCon.SESSIONID = @SESSIONID  and PSReg.PSID = PSCon.PSID'
		SET @V_PARAMDEFINITION = N'@SESSIONID INT, @OUT_USERID INT OUTPUT, @V_USERNAME NVARCHAR(256) OUTPUT'
		EXECUTE SP_EXECUTESQL @V_QUERY , @V_PARAMDEFINITION, @SESSIONID = @SESSIONID, @OUT_USERID = @OUT_USERID OUTPUT, @V_USERNAME = @V_USERNAME OUTPUT
		SELECT @V_ROWCOUNT = @@ROWCOUNT
		SELECT @V_DBSTATUS = @@ERROR
	END
	IF(@V_ROWCOUNT <= 0 OR @V_DBSTATUS <> 0)
	BEGIN
		SELECT MAINCODE = 11,CSSESSSIONID = @OUT_CSSESSIONID, USERID = NULL, UserName = NULL
		RETURN
	END
	
	BEGIN
		SET @V_QUERY=N'SELECT @ServiceType=ServiceType from WFSystemServicesTable WITH(NOLOCK) where PSID=@OUT_USERID'
		SET @V_PARAMDEFINITION = N'@OUT_USERID INT, @ServiceType NVARCHAR(256) OUTPUT'
		EXECUTE SP_EXECUTESQL @V_QUERY , @V_PARAMDEFINITION, @OUT_USERID = @OUT_USERID, @ServiceType = @ServiceType OUTPUT
		IF(upper(@ServiceType)=upper('RestServiceInvoker'))
			SELECT @isRestSOAP=2
		IF(upper(@ServiceType)=upper('WebService Invoker'))
			SELECT @isRestSOAP=1
	END
	
	BEGIN
		SET @V_ROWCOUNT = 0
		BEGIN
			SET @V_QUERY = N'SELECT TOP 1 @OUT_PROCESSINSTANCEID = PROCESSINSTANCEID,@OUT_WORKITEMID = WORKITEMID,@OUT_PROCESSDEFID = PROCESSDEFID,@OUT_ACTIVITYID = ACTIVITYID,@V_ACTIVITYNAME = ACTIVITYNAME,@OUT_PROCESSNAME = PROCESSNAME, @OUT_URN=URN,@ActivityType=ActivityType FROM WFINSTRUMENTTABLE WITH(UPDLOCK,READPAST) WHERE Q_QUEUEID = @Q_QUEUEID AND ROUTINGSTATUS = N''N'' AND LOCKSTATUS = N''N'''
			SET @V_PARAMDEFINITION = N'@Q_QUEUEID INT, @OUT_PROCESSINSTANCEID NVARCHAR(256) OUTPUT, @OUT_WORKITEMID INT OUTPUT, @OUT_PROCESSDEFID INT OUTPUT, @OUT_ACTIVITYID INT OUTPUT, @V_ACTIVITYNAME NVARCHAR(256) OUTPUT, @OUT_PROCESSNAME NVARCHAR(256) OUTPUT ,@OUT_URN NVARCHAR(256) OUTPUT,@ActivityType INT OUTPUT'
			EXECUTE SP_EXECUTESQL @V_QUERY, @V_PARAMDEFINITION, @Q_QUEUEID = @Q_QUEUEID, @OUT_PROCESSINSTANCEID = @OUT_PROCESSINSTANCEID OUTPUT, @OUT_WORKITEMID = @OUT_WORKITEMID OUTPUT, @OUT_PROCESSDEFID = @OUT_PROCESSDEFID OUTPUT, @OUT_ACTIVITYID = @OUT_ACTIVITYID OUTPUT,  @V_ACTIVITYNAME = @V_ACTIVITYNAME OUTPUT, @OUT_PROCESSNAME = @OUT_PROCESSNAME OUTPUT, @OUT_URN=@OUT_URN OUTPUT, @ActivityType=@ActivityType OUTPUT
			SELECT @V_ROWCOUNT = @@ROWCOUNT, @V_DBSTATUS = @@ERROR
			
			IF(@V_DBSTATUS <> 0)
			BEGIN
				SELECT MAINCODE = 15, CSSESSSIONID = @OUT_CSSESSIONID, USERID = @OUT_USERID, UserName = @V_USERNAME
				RETURN
			END
			/*IF SOAP Utility call then isRestSOAP=1 , ELSE IF REST Utility call isRestSOAP=2 else isRestSOAP=0*/
			IF(@isRestSOAP=1 AND @ActivityType=40)
			BEGIN
				SELECT @V_ROWCOUNT=0
			END
			IF(@isRestSOAP=2 AND @ActivityType=22)
			BEGIN
				SELECT @V_ROWCOUNT=0
			END
		END
		
		IF(@V_ROWCOUNT > 0)
		BEGIN
			SET @V_QUERY = N'UPDATE WFINSTRUMENTTABLE SET Q_USERID = @OUT_USERID, ASSIGNEDUSER = @V_USERNAME1, WORKITEMSTATE = 2, STATENAME = N''RUNNING'', LOCKEDBYNAME = @V_USERNAME2, LOCKSTATUS = N''Y'', LOCKEDTIME = GETDATE() WHERE PROCESSINSTANCEID = @OUT_PROCESSINSTANCEID AND WORKITEMID = @OUT_WORKITEMID'
			SET @V_PARAMDEFINITION = N'@OUT_USERID INT, @V_USERNAME1 NVARCHAR(256), @V_USERNAME2 NVARCHAR(256), @OUT_PROCESSINSTANCEID NVARCHAR(256), @OUT_WORKITEMID INT'
			EXECUTE SP_EXECUTESQL @V_QUERY , @V_PARAMDEFINITION, @OUT_USERID = @OUT_USERID, @V_USERNAME1 = @V_USERNAME, @V_USERNAME2 = @V_USERNAME, @OUT_PROCESSINSTANCEID = @OUT_PROCESSINSTANCEID, @OUT_WORKITEMID = @OUT_WORKITEMID
			SELECT @V_ROWCOUNT = @@ROWCOUNT
			IF(@V_ROWCOUNT > 0)
			BEGIN
				EXECUTE WFGenerateLog 7, 0, @OUT_PROCESSDEFID, @OUT_ACTIVITYID, @Q_QUEUEID, 'SYSTEM', @V_ACTIVITYNAME, 0, @OUT_PROCESSINSTANCEID, 0, NULL, @OUT_WORKITEMID, 0, 0, NULL, 0 , 0, 0, NULL ,NULL, @OUT_MAINCODE OUT
			END
			ELSE
			BEGIN
				SELECT MAINCODE = 18,CSSESSSIONID = @OUT_CSSESSIONID, USERID = @OUT_USERID, UserName = @V_USERNAME
				RETURN;
			END
		END
		ELSE
		BEGIN
			BEGIN
				SET @V_QUERY = 'SELECT TOP 1 @OUT_PROCESSINSTANCEID = PROCESSINSTANCEID,@OUT_WORKITEMID = WORKITEMID,@OUT_PROCESSDEFID = PROCESSDEFID,@OUT_ACTIVITYID = ACTIVITYID,@V_ACTIVITYNAME = ACTIVITYNAME,@OUT_PROCESSNAME = PROCESSNAME,@OUT_URN=URN
				FROM WFINSTRUMENTTABLE WITH(NOLOCK) WHERE Q_QUEUEID = @Q_QUEUEID AND ROUTINGSTATUS = N''N'' AND LOCKSTATUS = N''Y'' AND 
				LockedTime < DATEADD(ss,-3,GETDATE()) and Q_USERID = @OUT_USERID'
				SET @V_PARAMDEFINITION = N'@OUT_USERID INT, @Q_QUEUEID INT, @OUT_PROCESSINSTANCEID NVARCHAR(256) OUTPUT, @OUT_WORKITEMID INT
				OUTPUT, @OUT_PROCESSDEFID INT OUTPUT, @OUT_ACTIVITYID INT OUTPUT, @V_ACTIVITYNAME NVARCHAR(256) OUTPUT, @OUT_PROCESSNAME NVARCHAR(256) OUTPUT , @OUT_URN NVARCHAR(256) OUTPUT'
				EXECUTE SP_EXECUTESQL @V_QUERY, @V_PARAMDEFINITION, @OUT_USERID = @OUT_USERID, @Q_QUEUEID = @Q_QUEUEID, @OUT_PROCESSINSTANCEID = @OUT_PROCESSINSTANCEID OUTPUT, @OUT_WORKITEMID = @OUT_WORKITEMID OUTPUT, @OUT_PROCESSDEFID = @OUT_PROCESSDEFID OUTPUT, @OUT_ACTIVITYID = @OUT_ACTIVITYID OUTPUT, @V_ACTIVITYNAME = @V_ACTIVITYNAME OUTPUT, @OUT_PROCESSNAME = @OUT_PROCESSNAME OUTPUT, @OUT_URN = @OUT_URN OUTPUT
				SELECT @V_ROWCOUNT = @@ROWCOUNT, @V_DBSTATUS = @@ERROR
				
				IF(@V_DBSTATUS <> 0)
				BEGIN
					SELECT MAINCODE = 15, CSSESSSIONID = @OUT_CSSESSIONID, USERID = @OUT_USERID, UserName = @V_USERNAME
					RETURN
				END
			END
			IF(@V_ROWCOUNT <= 0)
			BEGIN
				SELECT MAINCODE = 18,CSSESSSIONID = @OUT_CSSESSIONID, USERID = @OUT_USERID, UserName = @V_USERNAME
				RETURN
			END
			
		END
		
	END
		SELECT  @OUT_MAINCODE AS MAINCODE, @OUT_CSSESSIONID AS CSSESSSIONID, @OUT_USERID AS USERID, @V_USERNAME AS UserName
		SELECT @OUT_PROCESSINSTANCEID AS PROCESSINSTANCEID,@OUT_WORKITEMID AS WORKEDITEMID,@OUT_PROCESSDEFID AS PROCESSDEFID,@OUT_ACTIVITYID AS ACTIVITYID,@OUT_PROCESSNAME AS PROCESSNAME,@OUT_URN AS URN
	
END

~

Print 'Stored Procedure WFGetNextWorkItemForUtil compiled successfully ........'
