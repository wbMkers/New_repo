CREATE OR REPLACE PROCEDURE WFPopulateUserQueue (
	temp_USERID NUMBER,
	temp_QUEUEID NUMBER)
AS
	V_ROWCOUNT  NUMBER;
	V_DBSTATUS  NUMBER;
	V_QUERY1 	VARCHAR2(1000);
	V_QUERY2 	VARCHAR2(1000);
	V_QUERY3 	VARCHAR2(1000);
	V_QUERY4 	VARCHAR2(1000);
	V_QUERY5 	VARCHAR2(1000);
	V_QUERY6 	VARCHAR2(1000);
	V_EXISTSFLAG NUMBER;
	V_USERID NUMBER;
	V_QUEUEID NUMBER;
	TYPE DYNAMICCURSOR  IS REF CURSOR;
    V_ADHOCCURSOR   DYNAMICCURSOR;
	v_quoteChar 			CHAR(1);
	USERID NUMBER;
	QUEUEID NUMBER;
BEGIN
	
	v_quoteChar := CHR(39);
	IF(temp_USERID is NOT NULL) THEN
		USERID:=CAST(REPLACE(temp_USERID,v_quoteChar,v_quoteChar||v_quoteChar) AS NUMBER);
	END IF;
	IF(temp_QUEUEID is NOT NULL) THEN
		QUEUEID:=CAST(REPLACE(temp_QUEUEID,v_quoteChar,v_quoteChar||v_quoteChar) AS NUMBER);
	END IF;
	IF(USERID IS NULL AND QUEUEID IS NULL) THEN
		RETURN;
	END IF;
	
	IF(USERID IS NOT  NULL AND QUEUEID IS NOT NULL) THEN
		RETURN;
	END IF;
	IF(USERID IS NOT NULL) THEN
		BEGIN
			V_QUERY1 := 'SELECT COUNT(1) FROM USERQUEUETABLE WHERE USERID = :USERID';
			EXECUTE IMMEDIATE V_QUERY1 INTO V_EXISTSFLAG USING USERID;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				V_EXISTSFLAG := 0;
		END;
		
		IF(V_EXISTSFLAG = 0) THEN
		BEGIN
			V_QUERY2 := 'INSERT INTO USERQUEUETABLE SELECT DISTINCT USERID, QUEUEID FROM QUSERGROUPVIEW WHERE USERID = :USERID';
			EXECUTE IMMEDIATE V_QUERY2 USING USERID;
		EXCEPTION
			WHEN OTHERS THEN
				RETURN;
		END;
		END IF;
	END IF;
	
	IF(QUEUEID IS NOT NULL) THEN
		BEGIN
			V_QUERY3 := 'DELETE FROM USERQUEUETABLE WHERE QUEUEID = :QUEUEID';
			EXECUTE IMMEDIATE V_QUERY3 USING QUEUEID;
			EXCEPTION
			WHEN OTHERS THEN
				RETURN;
		END;
		
		V_QUERY4 := 'SELECT COUNT(1) FROM USERQUEUETABLE WHERE USERID = :USERID';
		
		V_QUERY5 := 'INSERT INTO USERQUEUETABLE(USERID, QUEUEID) VALUES(:USERID, :QUEUEID)';
		
		BEGIN
			V_QUERY6 := 'SELECT DISTINCT USERID FROM QUSERGROUPVIEW WHERE QUEUEID = :QUEUEID';
			BEGIN
				OPEN V_ADHOCCURSOR FOR V_QUERY6 USING QUEUEID;
				LOOP
				BEGIN
					FETCH V_ADHOCCURSOR INTO V_USERID;
					EXIT WHEN V_ADHOCCURSOR%NOTFOUND;
					BEGIN
						V_EXISTSFLAG := 0;
						EXECUTE IMMEDIATE V_QUERY4 INTO V_EXISTSFLAG USING V_USERID;
						IF(V_EXISTSFLAG > 0) THEN
						BEGIN
							EXECUTE IMMEDIATE V_QUERY5 USING V_USERID, QUEUEID;
							EXCEPTION 
								WHEN OTHERS THEN
									CLOSE V_ADHOCCURSOR;
									RETURN;
						END;
						END IF;
						EXCEPTION 
							WHEN OTHERS THEN
								V_EXISTSFLAG := 0;
					END;
				END;
				END LOOP;
				CLOSE V_ADHOCCURSOR;
			END;
		END;
	END IF;
	
END;