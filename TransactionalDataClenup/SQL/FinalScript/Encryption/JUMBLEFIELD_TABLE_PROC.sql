USE [testen]
GO

/****** Object:  StoredProcedure [dbo].[jumblfield_Cursor]    Script Date: 2/14/2020 6:02:26 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE or alter PROCEDURE [dbo].[JUMBLEFIELD_TABLE_PROC]
@tablename NVARCHAR (100), @cname NVARCHAR (500)
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @V_CNAME AS NVARCHAR (500);
	DECLARE @V_CNAME_SRC AS NVARCHAR (500);
	DECLARE @V_TABLENAME_SRC AS NVARCHAR (500);
	--DECLARE @V_TABLENAME AS NVARCHAR (500);
	DECLARE @V_TABLENAME AS NVARCHAR (500);
    DECLARE @Scramoutput AS NVARCHAR (MAX);
    DECLARE @Counter AS INT;
	DECLARE @EXTFLAG INT
	DECLARE @V_QUERYSTR NVARCHAR(MAX) 
	DECLARE @TEMP_TABLE_NAME NVARCHAR(100)
	DECLARE @UPD_STR NVARCHAR(MAX)
	DECLARE @V_PARAMDEFINITION1 NVARCHAR(MAX)
	DECLARE @V_QUERYSTR_DROP NVARCHAR(500)
	
	IF (@tablename IS NULL OR @tablename = '' OR @cname IS NULL OR @cname = '')
	BEGIN
		RAISERROR ( 'Invalid TABLE NAME OR COLUMNNAME',16,1)
		RETURN
	END
	
	SET @V_TABLENAME_SRC = @tablename
	SET @V_CNAME_SRC = @cname
	SET @TEMP_TABLE_NAME = 'SPLIT_VALUE'
	
	SET @V_QUERYSTR = 'SELECT value ,(SELECT @V_TABLENAME_SRC ) AS TABLE_NAME INTO '+@TEMP_TABLE_NAME+ ' FROM STRING_SPLIT(@V_CNAME_SRC,'','')'
	SET @V_PARAMDEFINITION1 = N' @V_TABLENAME_SRC NVARCHAR (500), @TEMP_TABLE_NAME NVARCHAR (100),@V_CNAME_SRC NVARCHAR (500)'
	EXECUTE sp_executesql @V_QUERYSTR,@V_PARAMDEFINITION1,@V_TABLENAME_SRC=@V_TABLENAME_SRC, @TEMP_TABLE_NAME = @TEMP_TABLE_NAME,@V_CNAME_SRC=@V_CNAME_SRC
	--PRINT (@V_QUERYSTR)
	
	SET @V_QUERYSTR = 'SELECT @EXTFLAG=COUNT(1) FROM  ' +@TEMP_TABLE_NAME 
	SET @V_PARAMDEFINITION1 = N' @EXTFLAG INT OUTPUT'
	EXECUTE sp_executesql @V_QUERYSTR,@V_PARAMDEFINITION1,@EXTFLAG OUTPUT
	
	IF (@EXTFLAG > 1)
	--PRINT ('CHECK')
	BEGIN
		--SET @cname = SELECT VALUE FROM + @TEMP_TABLE_NAME
	    SET @Counter = 1;
		DECLARE @SQL AS NVARCHAR (1000);
		
		--set @SQL = 'Declare JumblefiledCURSOR CURSOR FOR select ' + ' ' + @cname + ' ' + 'from dbo.'+ @tablename
		set @SQL = 'Declare JumblefiledCURSOR CURSOR FOR select VALUE,TABLE_NAME FROM ' + @TEMP_TABLE_NAME
		EXECUTE SP_EXECUTESQL @SQL
		--PRINT @SQL;
		--EXECUTE sys.sp_executesql @SQL;
		OPEN JumblefiledCURSOR;
		FETCH NEXT FROM JumblefiledCURSOR INTO @V_CNAME ,@V_TABLENAME;
		WHILE @@FETCH_STATUS = 0
			BEGIN
				BEGIN
					--PRINT 'Statement value' + @V_CNAME;
					SET @UPD_STR ='UPDATE '+@V_TABLENAME + ' SET ' +@V_CNAME + ' = dbo.[fn_String_Scramble](' +@V_CNAME +')'
					EXECUTE (@UPD_STR)
					PRINT '------------------------------------';
				END
				FETCH NEXT FROM JumblefiledCURSOR INTO  @V_CNAME ,@V_TABLENAME;
			END
		CLOSE JumblefiledCURSOR;
		DEALLOCATE JumblefiledCURSOR;
	END
	IF EXISTS (SELECT 1 FROM sys.tables WHERE name = N'SPLIT_VALUE' AND type = 'U')
		BEGIN TRY
				SET @V_QUERYSTR_DROP = 'DROP TABLE SPLIT_VALUE'  
				EXECUTE sp_executesql @V_QUERYSTR_DROP 
		END TRY
		BEGIN CATCH
				PRINT ('DROP FAILED FOR SPLIT_VALUE TABLE: ' + CONVERT(NVARCHAR(10), ERROR_NUMBER()) + ' , ERROR MESSAGE : ' + ERROR_MESSAGE())
		END CATCH
END

GO


